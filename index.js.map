{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst spinner = document.querySelector('.loader');\n\nfunction showSpinner() {\n    spinner.style.display = 'flex';\n}\n\nexport function hideSpinner() {\n    spinner.style.display = 'none';\n}\n\nexport function fetchImages(query) {\n    const API_KEY = '49502034-df263a01178fc9ef1a0cdcc0b';\n    showSpinner();\n    return fetch(\n        `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`\n    ).then(response => {\n        if (!response.ok) {\n            throw new Error('Failed to fetch images');\n        }\n        return response.json();\n    });\n}\n\nexport function onFetchError(error) {\n    iziToast.error({\n        title: 'Error',\n        message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n    });\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst cardGallery = document.querySelector('.gallery');\nexport function renderImgCard(dataArr) {\n    const markupImages = dataArr\n        .map(\n            ({\n                webformatURL,\n                largeImageURL,\n                tags,\n                likes,\n                views,\n                comments,\n                downloads,\n            }) =>\n                `<li class=\"gallery-item\">\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" width=\"360\" height=\"200\"/>\n                <ul class=\"gallery-text-list\">\n                    <li class=\"gallery-text-item\"><h3>Likes</h3><p>${likes}</p></li>\n                    <li class=\"gallery-text-item\"><h3>Views</h3><p>${views}</p></li>\n                    <li class=\"gallery-text-item\"><h3>Comments</h3><p>${comments}</p></li>\n                    <li class=\"gallery-text-item\"><h3>Downloads</h3><p>${downloads}</p></li>\n                </ul>\n            </a>\n        </li>`\n        )\n        .join('');\n    cardGallery.innerHTML = markupImages;\n\n    const lightbox = new SimpleLightbox('.gallery a', {\n        captionsData: 'alt',\n        captionPosition: 'bottom',\n    });\n\n    lightbox.refresh();\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { fetchImages, onFetchError, hideSpinner } from './js/pixabay-api';\nimport { renderImgCard } from './js/render-functions';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(evt) {\n    evt.preventDefault();\n    const formEvt = evt.currentTarget;\n    const queryValue = formEvt.elements.query.value.trim();\n\n    if (queryValue === '') {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please enter a search term!',\n            position: 'topRight',\n        });\n    } else {\n        fetchImages(queryValue)\n            .then(data => {\n                if (data.hits.length === 0) {\n                    iziToast.warning({\n                        message:\n                            'Sorry, there are no images matching your search query. Please try again!',\n                        backgroundColor: '#EF4040',\n                        messageColor: '#FFF',\n                        iconText: '⚠︎',\n                        iconColor: '#FFF',\n                        close: true,\n                        balloon: true,\n\n                        position: 'topRight',\n                    });\n                }\n                renderImgCard(data.hits);\n            })\n            .catch(onFetchError)\n            .finally(() => {\n                formEvt.reset();\n                hideSpinner();\n            });\n    }\n}"],"names":["spinner","showSpinner","hideSpinner","fetchImages","query","API_KEY","response","onFetchError","error","iziToast","cardGallery","renderImgCard","dataArr","markupImages","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","form","handlerSearch","evt","formEvt","queryValue","data"],"mappings":"6vBAKA,MAAMA,EAAU,SAAS,cAAc,SAAS,EAEhD,SAASC,GAAc,CACnBD,EAAQ,MAAM,QAAU,MAC5B,CAEO,SAASE,GAAc,CAC1BF,EAAQ,MAAM,QAAU,MAC5B,CAEO,SAASG,EAAYC,EAAO,CAC/B,MAAMC,EAAU,qCAChB,OAAAJ,IACO,MACH,gCAAgCI,CAAO,MAAMD,CAAK,0DAC1D,EAAM,KAAKE,GAAY,CACf,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,wBAAwB,EAE5C,OAAOA,EAAS,MACxB,CAAK,CACL,CAEO,SAASC,EAAaC,EAAO,CAChCC,EAAS,MAAM,CACX,MAAO,QACP,QACI,2EACJ,SAAU,UAClB,CAAK,CACL,CC9BA,MAAMC,EAAc,SAAS,cAAc,UAAU,EAC9C,SAASC,EAAcC,EAAS,CACnC,MAAMC,EAAeD,EAChB,IACG,CAAC,CACG,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACH,IACG;AAAA,4CAC4BL,CAAa;AAAA,kDACPD,CAAY,UAAUE,CAAI;AAAA;AAAA,qEAEPC,CAAK;AAAA,qEACLC,CAAK;AAAA,wEACFC,CAAQ;AAAA,yEACPC,CAAS;AAAA;AAAA;AAAA,cAIzE,EACA,KAAK,EAAE,EACZV,EAAY,UAAYG,EAEP,IAAIQ,EAAe,aAAc,CAC9C,aAAc,MACd,gBAAiB,QACzB,CAAK,EAEQ,QAAO,CACpB,CC/BA,MAAMC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,CAAa,EAE7C,SAASA,EAAcC,EAAK,CACxBA,EAAI,eAAc,EAClB,MAAMC,EAAUD,EAAI,cACdE,EAAaD,EAAQ,SAAS,MAAM,MAAM,OAE5CC,IAAe,GACfjB,EAAS,MAAM,CACX,MAAO,QACP,QAAS,8BACT,SAAU,UACtB,CAAS,EAEDN,EAAYuB,CAAU,EACjB,KAAKC,GAAQ,CACNA,EAAK,KAAK,SAAW,GACrBlB,EAAS,QAAQ,CACb,QACI,2EACJ,gBAAiB,UACjB,aAAc,OACd,SAAU,KACV,UAAW,OACX,MAAO,GACP,QAAS,GAET,SAAU,UAClC,CAAqB,EAELE,EAAcgB,EAAK,IAAI,CACvC,CAAa,EACA,MAAMpB,CAAY,EAClB,QAAQ,IAAM,CACXkB,EAAQ,MAAK,EACbvB,GAChB,CAAa,CAEb"}